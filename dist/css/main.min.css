body{font-family:Be Vietnam Pro,sans-serif}.fs-body{font-size:.875rem}.fs-primary-heading{font-size:2.5rem;line-height:1.1}.fs-secondary-heading{font-size:1.875rem;line-height:1.1}.fs-nav{font-size:.9375rem}.fs-button{font-size:.8125rem}.fs-paragraph{font-size:1rem}.fw-semi-bold{font-weight:500}.fw-bold{font-weight:700}.attribution{font-size:.8125rem;text-align:center}*,:after,:before{box-sizing:border-box}*{margin:0;padding:0;font:inherit}ol[role=list],ul[role=list]{list-style:none}html:focus-within{scroll-behavior:smooth}body,html{height:100%}body{text-rendering:optimizeSpeed;line-height:1.5}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img,picture,svg{max-width:100%;display:block}@media (prefers-reduced-motion:reduce){html:focus-within{scroll-behavior:auto}*,:after,:before{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}.padding-block{padding-block:2.835rem}.padding-inline{padding-inline:1.53rem 1.25rem}.attribution{padding-bottom:1rem;height:2rem}.header__container{display:grid;justify-content:space-between;grid-template-columns:repeat(2,1fr)}.logo{width:67%}.nav__mobile-icon{position:fixed;right:1.5625rem;top:2.633rem}.intro-img{width:91%;height:91%}.active{display:block}.inactive{display:none}body{background-image:url(../img/bg-simplify-section-mobile.svg)}.text-primary-900{color:#242d52}.text-primary-400{color:#f25f3a}.text-neutral-300{color:#9095a7}.text-neutral-100{color:#fafafa}.text-neutral-200{color:#ffefeb}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsIm1haW4uY3NzIiwiYWJzdHJhY3RzL192YXJpYWJsZXMuc2NzcyIsImJhc2UvX3Jlc2V0LnNjc3MiLCJsYXlvdXQvX2Jhc2UtbGF5b3V0LnNjc3MiLCJsYXlvdXQvX2Zvb3Rlci5zY3NzIiwibGF5b3V0L19ncmlkLnNjc3MiLCJsYXlvdXQvX2hlYWRlci5zY3NzIiwibGF5b3V0L19tYWluLnNjc3MiLCJsYXlvdXQvX25hdmlnYXRpb24uc2NzcyIsInRoZW1lcy9fZGVmYXVsdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLEtBQ0MscUNBQUEsQ0NERCxBRElBLFNBQ0MsaUJFUVEsQ0RUVCxBREtBLG9CQUNDLGlCRU9RLEFGTlIsZUFBQSxDQ0ZELEFES0Esc0JBQ0EsbUJFQ1MsQUZBVCxlQUFBLENDRkEsQURLQSxRQUNDLGtCRU5RLENESVQsQURLQSxXQUNDLGtCRVpRLENEVVQsQURLQSxjQUNDLGNFYlEsQ0RXVCxBREtBLGNBQ0MsZUVYYyxDRFNmLEFES0EsU0FDQyxlRWRTLENEWVYsQURLQSxhQUNDLG1CRTVCUSxBRjZCUixpQkFBQSxDQ0ZELEFFdENBLGlCQUdDLHFCQUFBLENGMkNELEFFdkNBLEVBQ0MsU0FBQSxBQUNBLFVBQUEsQUFDQSxZQUFBLENGMkNELEFFdkNBLDRCQUVDLGVBQUEsQ0YyQ0QsQUV2Q0Esa0JBQ0Msc0JBQUEsQ0YyQ0QsQUV2Q0EsVUFFQyxXQUFBLENGMkNELEFFdkNBLEtBQ0MsNkJBQUEsQUFDQSxlQUFBLENGMkNELEFFdkNBLGVBQ0MsaUNBQUEsNkJBQUEsQ0YyQ0QsQUV2Q0EsZ0JBR0MsZUFBQSxBQUNBLGFBQUEsQ0YyQ0QsQUV2Q0EsdUNBQ0Msa0JBQ0Msb0JBQUEsQ0YyQ0EsQUV4Q0QsaUJBR0MsbUNBQUEsQUFDQSxzQ0FBQSxBQUNBLG9DQUFBLEFBQ0EsOEJBQUEsQ0YwQ0EsQ0FDRixBR3JHQSxlQUNJLHNCQUFBLENIdUdKLEFHcEdBLGdCQUNJLDhCQUFBLENIdUdKLEFJbEhBLGFBQ0ksb0JBQUEsQUFFQSxXQUFBLENKb0hKLEFLckhBLG1CQUNJLGFBQUEsQUFDQSw4QkFBQSxBQUNBLG1DQUFBLENMd0hKLEFNN0hBLE1BQ0ksU0FBQSxDTmdJSixBTTlIQSxrQkFDSSxlQUFBLEFBQ0EsZ0JBQUEsQUFDQSxZQUFBLENOaUlKLEFPcElBLFdBQ0ksVUFBQSxBQUNBLFVBQUEsQ1B1SUosQVE1SUEsUUFDSSxhQUFBLENSK0lKLEFRNUlBLFVBQ0ksWUFBQSxDUitJSixBU2pKQSxLQUNDLDJEQUFBLENUb0pELEFTakpBLGtCQUNJLGFSSFUsQ0R1SmQsQVNqSkEsa0JBQ0ksYVJSVSxDRDRKZCxBU2pKQSxrQkFDSSxhUk5VLENEMEpkLEFTakpBLGtCQUNJLGFSWlUsQ0RnS2QsQVNqSkEsa0JBQ0ksYVJmVSxDRG1LZCIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICdhYnN0cmFjdHMvdmFyaWFibGVzJyBhcyB2O1xyXG5cclxuYm9keSB7XHJcblx0Zm9udC1mYW1pbHk6ICdCZSBWaWV0bmFtIFBybycsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbi5mcy1ib2R5IHtcclxuXHRmb250LXNpemU6IHYuJGZzLTQwMDtcclxufSBcclxuXHJcblxyXG4uZnMtcHJpbWFyeS1oZWFkaW5nIHtcclxuXHRmb250LXNpemU6IHYuJGZzLTgwMDtcclxuXHRsaW5lLWhlaWdodDogMS4xO1xyXG59XHJcblxyXG4uZnMtc2Vjb25kYXJ5LWhlYWRpbmcge1xyXG5mb250LXNpemU6IHYuJGZzLTcwMDtcclxubGluZS1oZWlnaHQ6IDEuMTtcclxufSBcclxuXHJcbi5mcy1uYXYge1xyXG5cdGZvbnQtc2l6ZTogdi4kZnMtNTAwO1xyXG59XHJcblxyXG4uZnMtYnV0dG9uIHtcclxuIGZvbnQtc2l6ZTogdi4kZnMtMzAwO1xyXG59XHJcblxyXG4uZnMtcGFyYWdyYXBoIHtcclxuXHRmb250LXNpemU6IHYuJGZzLTYwMDtcclxufVxyXG5cclxuLmZ3LXNlbWktYm9sZCB7XHJcblx0Zm9udC13ZWlnaHQ6IHYuJGZ3LXNlbWktYm9sZFxyXG59XHJcblxyXG4uZnctYm9sZCB7XHJcblx0Zm9udC13ZWlnaHQ6IHYuJGZ3LWJvbGQ7XHJcbn1cclxuXHJcbi5hdHRyaWJ1dGlvbiB7XHJcblx0Zm9udC1zaXplOiB2LiRmcy0zMDA7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59IiwiYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIkJlIFZpZXRuYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG59XG5cbi5mcy1ib2R5IHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cblxuLmZzLXByaW1hcnktaGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBsaW5lLWhlaWdodDogMS4xO1xufVxuXG4uZnMtc2Vjb25kYXJ5LWhlYWRpbmcge1xuICBmb250LXNpemU6IDEuODc1cmVtO1xuICBsaW5lLWhlaWdodDogMS4xO1xufVxuXG4uZnMtbmF2IHtcbiAgZm9udC1zaXplOiAwLjkzNzVyZW07XG59XG5cbi5mcy1idXR0b24ge1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbn1cblxuLmZzLXBhcmFncmFwaCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLmZ3LXNlbWktYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mdy1ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmF0dHJpYnV0aW9uIHtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLyogcHJlcGFyZWQgb24gYmVobGFmIG9mIGh0dHBzOi8vcGljY2FsaWwubGkvYmxvZy9hLW1vZGVybi1jc3MtcmVzZXQvIGFuZCBLZXZpbiBQb3dlbGwgdmlkZW8gKi9cbi8qIEJveCBzaXppbmcgcnVsZXMsIHJlbW92ZSBkZWZhdWx0IG1hcmdpbiBhbmQgcGFkZGluZyAqL1xuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLCBwYWRkaW5nIGFuZCBhZGRpbmcgZm9udCBpbmhlcml0ICovXG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250OiBpbmhlcml0O1xufVxuXG4vKiBSZW1vdmUgbGlzdCBzdHlsZXMgb24gdWwsIG9sIGVsZW1lbnRzIHdpdGggYSBsaXN0IHJvbGUsIHdoaWNoIHN1Z2dlc3RzIGRlZmF1bHQgc3R5bGluZyB3aWxsIGJlIHJlbW92ZWQgKi9cbnVsW3JvbGU9bGlzdF0sXG5vbFtyb2xlPWxpc3RdIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyogU2V0IGNvcmUgcm9vdCBkZWZhdWx0cyAqL1xuaHRtbDpmb2N1cy13aXRoaW4ge1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuLyogU2V0IGNvcmUgYm9keSBhbWQgaHRtbCBkZWZhdWx0cyAqL1xuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi8qIFNldCBjb3JlIGJvZHkgZGVmYXVsdHMgKi9cbmJvZHkge1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVTcGVlZDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLyogQSBlbGVtZW50cyB0aGF0IGRvbid0IGhhdmUgYSBjbGFzcyBnZXQgZGVmYXVsdCBzdHlsZXMgKi9cbmE6bm90KFtjbGFzc10pIHtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvO1xufVxuXG4vKiBNYWtlIGltYWdlcyBlYXNpZXIgdG8gd29yayB3aXRoICovXG5pbWcsXG5waWN0dXJlLFxuc3ZnIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyogUmVtb3ZlIGFsbCBhbmltYXRpb25zLCB0cmFuc2l0aW9ucyBhbmQgc21vb3RoIHNjcm9sbCBmb3IgcGVvcGxlIHRoYXQgcHJlZmVyIG5vdCB0byBzZWUgdGhlbSAqL1xuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcbiAgaHRtbDpmb2N1cy13aXRoaW4ge1xuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0bztcbiAgfVxuICAqLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMSAhaW1wb3J0YW50O1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0byAhaW1wb3J0YW50O1xuICB9XG59XG4ucGFkZGluZy1ibG9jayB7XG4gIHBhZGRpbmctYmxvY2s6IDIuODM1cmVtO1xufVxuXG4ucGFkZGluZy1pbmxpbmUge1xuICBwYWRkaW5nLWlubGluZTogMS41M3JlbSAxLjI1cmVtO1xufVxuXG4uYXR0cmlidXRpb24ge1xuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcbiAgaGVpZ2h0OiAycmVtO1xufVxuXG4uaGVhZGVyX19jb250YWluZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG59XG5cbi5sb2dvIHtcbiAgd2lkdGg6IDY3JTtcbn1cblxuLm5hdl9fbW9iaWxlLWljb24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAxLjU2MjVyZW07XG4gIHRvcDogMi42MzNyZW07XG59XG5cbi5pbnRyby1pbWcge1xuICB3aWR0aDogOTElO1xuICBoZWlnaHQ6IDkxJTtcbn1cblxuLmFjdGl2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaW5hY3RpdmUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2JnLXNpbXBsaWZ5LXNlY3Rpb24tbW9iaWxlLnN2Z1wiKTtcbn1cblxuLnRleHQtcHJpbWFyeS05MDAge1xuICBjb2xvcjogaHNsKDIyOGRlZywgMzklLCAyMyUpO1xufVxuXG4udGV4dC1wcmltYXJ5LTQwMCB7XG4gIGNvbG9yOiBoc2woMTJkZWcsIDg4JSwgNTklKTtcbn1cblxuLnRleHQtbmV1dHJhbC0zMDAge1xuICBjb2xvcjogaHNsKDIyN2RlZywgMTIlLCA2MSUpO1xufVxuXG4udGV4dC1uZXV0cmFsLTEwMCB7XG4gIGNvbG9yOiBoc2woMGRlZywgMCUsIDk4JSk7XG59XG5cbi50ZXh0LW5ldXRyYWwtMjAwIHtcbiAgY29sb3I6IGhzbCgxM2RlZywgMTAwJSwgOTYlKTtcbn0iLCJAdXNlICdhYnN0cmFjdHMvYnJlYWtwb2ludHMnO1xyXG4vL2NvbG9yc1xyXG4vLyAjIyMgUHJpbWFyeVxyXG5cclxuJHByaW1hcnktNDAwOiBoc2woMTIsIDg4JSwgNTklKTtcclxuJHByaW1hcnktOTAwOiBoc2woMjI4LCAzOSUsIDIzJSk7XHJcblxyXG4vLyAjIyMgTmV1dHJhbFxyXG4kbmV1dHJhbC0xMDA6IGhzbCgwLCAwJSwgOTglKTtcclxuJG5ldXRyYWwtMjAwOiBoc2woMTMsIDEwMCUsIDk2JSk7XHJcbiRuZXV0cmFsLTMwMDogaHNsKDIyNywgMTIlLCA2MSUpO1xyXG4kbmV1dHJhbC05MDA6IGhzbCgyMzMsIDEyJSwgMTMlKTtcclxuXHJcbi8vZm9udC1zaXplc1xyXG4kZnMtMzAwOiAwLjgxMjVyZW07XHJcbiRmcy00MDA6IDAuODc1cmVtO1xyXG4kZnMtNTAwOiAwLjkzNzVyZW07XHJcbiRmcy02MDA6IDFyZW07XHJcbiRmcy03MDA6IDEuODc1cmVtO1xyXG4kZnMtODAwOiAyLjVyZW07XHJcbiRmcy05MDA6IDMuNXJlbTtcclxuXHJcbi8vZm9udC13ZWlnaHRcclxuJGZ3LXNlbWktYm9sZDogNTAwO1xyXG4kZnctYm9sZDogNzAwO1xyXG5cclxuIiwiLyogcHJlcGFyZWQgb24gYmVobGFmIG9mIGh0dHBzOi8vcGljY2FsaWwubGkvYmxvZy9hLW1vZGVybi1jc3MtcmVzZXQvIGFuZCBLZXZpbiBQb3dlbGwgdmlkZW8gKi9cclxuXHJcbi8qIEJveCBzaXppbmcgcnVsZXMsIHJlbW92ZSBkZWZhdWx0IG1hcmdpbiBhbmQgcGFkZGluZyAqL1xyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4vKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4sIHBhZGRpbmcgYW5kIGFkZGluZyBmb250IGluaGVyaXQgKi9cclxuKiB7XHJcblx0bWFyZ2luOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0Zm9udDogaW5oZXJpdDtcclxufVxyXG5cclxuLyogUmVtb3ZlIGxpc3Qgc3R5bGVzIG9uIHVsLCBvbCBlbGVtZW50cyB3aXRoIGEgbGlzdCByb2xlLCB3aGljaCBzdWdnZXN0cyBkZWZhdWx0IHN0eWxpbmcgd2lsbCBiZSByZW1vdmVkICovXHJcbnVsW3JvbGU9J2xpc3QnXSxcclxub2xbcm9sZT0nbGlzdCddIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4vKiBTZXQgY29yZSByb290IGRlZmF1bHRzICovXHJcbmh0bWw6Zm9jdXMtd2l0aGluIHtcclxuXHRzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxufVxyXG5cclxuLyogU2V0IGNvcmUgYm9keSBhbWQgaHRtbCBkZWZhdWx0cyAqL1xyXG5odG1sLFxyXG5ib2R5IHtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi8qIFNldCBjb3JlIGJvZHkgZGVmYXVsdHMgKi9cclxuYm9keSB7XHJcblx0dGV4dC1yZW5kZXJpbmc6IG9wdGltaXplU3BlZWQ7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxufVxyXG5cclxuLyogQSBlbGVtZW50cyB0aGF0IGRvbid0IGhhdmUgYSBjbGFzcyBnZXQgZGVmYXVsdCBzdHlsZXMgKi9cclxuYTpub3QoW2NsYXNzXSkge1xyXG5cdHRleHQtZGVjb3JhdGlvbi1za2lwLWluazogYXV0bztcclxufVxyXG5cclxuLyogTWFrZSBpbWFnZXMgZWFzaWVyIHRvIHdvcmsgd2l0aCAqL1xyXG5pbWcsXHJcbnBpY3R1cmUsXHJcbnN2ZyB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKiBSZW1vdmUgYWxsIGFuaW1hdGlvbnMsIHRyYW5zaXRpb25zIGFuZCBzbW9vdGggc2Nyb2xsIGZvciBwZW9wbGUgdGhhdCBwcmVmZXIgbm90IHRvIHNlZSB0aGVtICovXHJcbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XHJcblx0aHRtbDpmb2N1cy13aXRoaW4ge1xyXG5cdFx0c2Nyb2xsLWJlaGF2aW9yOiBhdXRvO1xyXG5cdH1cclxuXHJcblx0KixcclxuXHQqOjpiZWZvcmUsXHJcblx0Kjo6YWZ0ZXIge1xyXG5cdFx0YW5pbWF0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcclxuXHRcdGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcclxuXHRcdHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xyXG5cdFx0c2Nyb2xsLWJlaGF2aW9yOiBhdXRvICFpbXBvcnRhbnQ7XHJcblx0fVxyXG59XHJcbiIsIi8vIC53cmFwcGVyIHtcclxuLy8gICAgIHBhZGRpbmc6IDIuNzMzcmVtIDEuMjVyZW0gMS4zcmVtIDEuNTNyZW07XHJcbi8vIH1cclxuLy8gLmNvbnRhaW5lciB7XHJcbiAgICBcclxuLy8gfVxyXG4ucGFkZGluZy1ibG9jayB7XHJcbiAgICBwYWRkaW5nLWJsb2NrOiAyLjgzNXJlbTtcclxufVxyXG5cclxuLnBhZGRpbmctaW5saW5lIHtcclxuICAgIHBhZGRpbmctaW5saW5lOiAxLjUzcmVtIDEuMjVyZW07XHJcbn0iLCIuYXR0cmlidXRpb257XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcclxuXHJcbiAgICBoZWlnaHQ6IDJyZW07XHJcbn0iLCJAdXNlICdhYnN0cmFjdHMvYnJlYWtwb2ludHMnIGFzIGI7XHJcblxyXG4uaGVhZGVyX19jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcbn0iLCIubG9nbyB7XHJcbiAgICB3aWR0aDogNjclO1xyXG59XHJcbi5uYXZfX21vYmlsZS1pY29uIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHJpZ2h0OiAxLjU2MjVyZW07XHJcbiAgICB0b3A6IDIuNjMzcmVtO1xyXG4gICBcclxufSIsIkB1c2UgJ2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHY7XHJcbkB1c2UgJ2Fic3RyYWN0cy9icmVha3BvaW50cycgYXMgYjtcclxuXHJcbi5pbnRyby1pbWcge1xyXG4gICAgd2lkdGg6IDkxJTtcclxuICAgIGhlaWdodDogOTElO1xyXG59IiwiLmFjdGl2ZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmluYWN0aXZlIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn0iLCJAdXNlICdhYnN0cmFjdHMvYnJlYWtwb2ludHMnIGFzIGI7XHJcbkB1c2UgJ2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHY7XHJcblxyXG5ib2R5IHtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9iZy1zaW1wbGlmeS1zZWN0aW9uLW1vYmlsZS5zdmcnKTtcclxufVxyXG5cclxuLnRleHQtcHJpbWFyeS05MDAge1xyXG4gICAgY29sb3I6IHYuJHByaW1hcnktOTAwO1xyXG59XHJcblxyXG4udGV4dC1wcmltYXJ5LTQwMCB7XHJcbiAgICBjb2xvcjogdi4kcHJpbWFyeS00MDA7XHJcbn1cclxuXHJcbi50ZXh0LW5ldXRyYWwtMzAwIHtcclxuICAgIGNvbG9yOiB2LiRuZXV0cmFsLTMwMDtcclxufVxyXG5cclxuLnRleHQtbmV1dHJhbC0xMDAge1xyXG4gICAgY29sb3I6IHYuJG5ldXRyYWwtMTAwO1xyXG59XHJcblxyXG4udGV4dC1uZXV0cmFsLTIwMCB7XHJcbiAgICBjb2xvcjogdi4kbmV1dHJhbC0yMDA7XHJcbn1cclxuXHJcblxyXG4iXX0= */
